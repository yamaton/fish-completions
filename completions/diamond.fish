# Auto-generated with h2o

complete -k -c diamond -n __fish_use_subcommand -x -a makeidx -d 'Make database index'
complete -k -c diamond -n __fish_use_subcommand -x -a test -d 'Run regression tests'
complete -k -c diamond -n __fish_use_subcommand -x -a dbinfo -d 'Print information about a DIAMOND database file'
complete -k -c diamond -n __fish_use_subcommand -x -a getseq -d 'Retrieve sequences from a DIAMOND database file'
complete -k -c diamond -n __fish_use_subcommand -x -a version -d 'Display version information'
complete -k -c diamond -n __fish_use_subcommand -x -a help -d 'Produce help message'
complete -k -c diamond -n __fish_use_subcommand -x -a view -d 'View DIAMOND alignment archive (DAA) formatted file'
complete -k -c diamond -n __fish_use_subcommand -x -a blastx -d 'Align DNA query sequences against a protein reference database'
complete -k -c diamond -n __fish_use_subcommand -x -a blastp -d 'Align amino acid query sequences against a protein reference database'
complete -k -c diamond -n __fish_use_subcommand -x -a prepdb -d 'Prepare BLAST database for use with Diamond'
complete -k -c diamond -n __fish_use_subcommand -x -a makedb -d 'Build DIAMOND database from a FASTA file'



complete -c diamond -n "__fish_seen_subcommand_from makedb" -l in -d 'input reference file in FASTA format'
complete -c diamond -n "__fish_seen_subcommand_from makedb" -l taxonmap -d 'protein accession to taxid mapping file'
complete -c diamond -n "__fish_seen_subcommand_from makedb" -l taxonnodes -d 'taxonomy nodes.dmp from NCBI'
complete -c diamond -n "__fish_seen_subcommand_from makedb" -l taxonnames -d 'taxonomy names.dmp from NCBI'



complete -c diamond -n "__fish_seen_subcommand_from blastp" -l query -s q -d 'input query file'
complete -c diamond -n "__fish_seen_subcommand_from blastp" -l strand -d 'query strands to search (both/minus/plus)'
complete -c diamond -n "__fish_seen_subcommand_from blastp" -l un -d 'file for unaligned queries'
complete -c diamond -n "__fish_seen_subcommand_from blastp" -l al -d 'file or aligned queries'
complete -c diamond -n "__fish_seen_subcommand_from blastp" -l unfmt -d 'format of unaligned query file (fasta/fastq)'
complete -c diamond -n "__fish_seen_subcommand_from blastp" -l alfmt -d 'format of aligned query file (fasta/fastq)'
complete -c diamond -n "__fish_seen_subcommand_from blastp" -l unal -d 'report unaligned queries (0=no, 1=yes)'
complete -c diamond -n "__fish_seen_subcommand_from blastp" -l max-target-seqs -s k -d 'maximum number of target sequences to report alignments for (default=25)'
complete -c diamond -n "__fish_seen_subcommand_from blastp" -l top -d 'report alignments within this percentage range of top alignment score (overrides --max-target-seqs)'
complete -c diamond -n "__fish_seen_subcommand_from blastp" -l max-hsps -d 'maximum number of HSPs per target sequence to report for each query (default=1)'
complete -c diamond -n "__fish_seen_subcommand_from blastp" -l range-culling -d 'restrict hit culling to overlapping query ranges'
complete -c diamond -n "__fish_seen_subcommand_from blastp" -l compress -d 'compression for output files (0=none, 1=gzip, zstd)'
complete -c diamond -n "__fish_seen_subcommand_from blastp" -l evalue -s e -d 'maximum e-value to report alignments (default=0.001)'
complete -c diamond -n "__fish_seen_subcommand_from blastp" -l min-score -d 'minimum bit score to report alignments (overrides e-value setting)'
complete -c diamond -n "__fish_seen_subcommand_from blastp" -l id -d 'minimum identity% to report an alignment'
complete -c diamond -n "__fish_seen_subcommand_from blastp" -l query-cover -d 'minimum query cover% to report an alignment'
complete -c diamond -n "__fish_seen_subcommand_from blastp" -l subject-cover -d 'minimum subject cover% to report an alignment'
complete -c diamond -n "__fish_seen_subcommand_from blastp" -l fast -d 'enable fast mode'
complete -c diamond -n "__fish_seen_subcommand_from blastp" -l mid-sensitive -d 'enable mid-sensitive mode'
complete -c diamond -n "__fish_seen_subcommand_from blastp" -l sensitive -d 'enable sensitive mode)'
complete -c diamond -n "__fish_seen_subcommand_from blastp" -l more-sensitive -d 'enable more sensitive mode'
complete -c diamond -n "__fish_seen_subcommand_from blastp" -l very-sensitive -d 'enable very sensitive mode'
complete -c diamond -n "__fish_seen_subcommand_from blastp" -l ultra-sensitive -d 'enable ultra sensitive mode'
complete -c diamond -n "__fish_seen_subcommand_from blastp" -l iterate -d 'iterated search with increasing sensitivity'
complete -c diamond -n "__fish_seen_subcommand_from blastp" -l global-ranking -s g -d 'number of targets for global ranking'
complete -c diamond -n "__fish_seen_subcommand_from blastp" -l block-size -s b -d 'sequence block size in billions of letters (default=2.0)'
complete -c diamond -n "__fish_seen_subcommand_from blastp" -l index-chunks -s c -d 'number of chunks for index processing (default=4)'
complete -c diamond -n "__fish_seen_subcommand_from blastp" -l tmpdir -s t -d 'directory for temporary files'
complete -c diamond -n "__fish_seen_subcommand_from blastp" -l parallel-tmpdir -d 'directory for temporary files used by multiprocessing'
complete -c diamond -n "__fish_seen_subcommand_from blastp" -l gapopen -d 'gap open penalty'
complete -c diamond -n "__fish_seen_subcommand_from blastp" -l gapextend -d 'gap extension penalty'
complete -c diamond -n "__fish_seen_subcommand_from blastp" -l frameshift -s F -d 'frame shift penalty (default=disabled)'
complete -c diamond -n "__fish_seen_subcommand_from blastp" -l long-reads -d 'short for --range-culling --top 10 -F 15'
complete -c diamond -n "__fish_seen_subcommand_from blastp" -l matrix -d 'score matrix for protein alignment (default=BLOSUM62)'
complete -c diamond -n "__fish_seen_subcommand_from blastp" -l custom-matrix -d 'file containing custom scoring matrix'
complete -c diamond -n "__fish_seen_subcommand_from blastp" -l comp-based-stats -d 'composition based statistics mode (0-4)'
complete -c diamond -n "__fish_seen_subcommand_from blastp" -l masking -d 'masking algorithm (none, seg, tantan=default)'
complete -c diamond -n "__fish_seen_subcommand_from blastp" -l query-gencode -d 'genetic code to use to translate query (see user manual)'
complete -c diamond -n "__fish_seen_subcommand_from blastp" -l salltitles -d 'include full subject titles in DAA file'
complete -c diamond -n "__fish_seen_subcommand_from blastp" -l sallseqid -d 'include all subject ids in DAA file'
complete -c diamond -n "__fish_seen_subcommand_from blastp" -l no-self-hits -d 'suppress reporting of identical self hits'
complete -c diamond -n "__fish_seen_subcommand_from blastp" -l taxonlist -d 'restrict search to list of taxon ids (comma-separated)'
complete -c diamond -n "__fish_seen_subcommand_from blastp" -l taxon-exclude -d 'exclude list of taxon ids (comma-separated)'
complete -c diamond -n "__fish_seen_subcommand_from blastp" -l seqidlist -d 'filter the database by list of accessions'
complete -c diamond -n "__fish_seen_subcommand_from blastp" -l skip-missing-seqids -d 'ignore accessions missing in the database'



complete -c diamond -n "__fish_seen_subcommand_from blastx" -l query -s q -d 'input query file'
complete -c diamond -n "__fish_seen_subcommand_from blastx" -l strand -d 'query strands to search (both/minus/plus)'
complete -c diamond -n "__fish_seen_subcommand_from blastx" -l un -d 'file for unaligned queries'
complete -c diamond -n "__fish_seen_subcommand_from blastx" -l al -d 'file or aligned queries'
complete -c diamond -n "__fish_seen_subcommand_from blastx" -l unfmt -d 'format of unaligned query file (fasta/fastq)'
complete -c diamond -n "__fish_seen_subcommand_from blastx" -l alfmt -d 'format of aligned query file (fasta/fastq)'
complete -c diamond -n "__fish_seen_subcommand_from blastx" -l unal -d 'report unaligned queries (0=no, 1=yes)'
complete -c diamond -n "__fish_seen_subcommand_from blastx" -l max-target-seqs -s k -d 'maximum number of target sequences to report alignments for (default=25)'
complete -c diamond -n "__fish_seen_subcommand_from blastx" -l top -d 'report alignments within this percentage range of top alignment score (overrides --max-target-seqs)'
complete -c diamond -n "__fish_seen_subcommand_from blastx" -l max-hsps -d 'maximum number of HSPs per target sequence to report for each query (default=1)'
complete -c diamond -n "__fish_seen_subcommand_from blastx" -l range-culling -d 'restrict hit culling to overlapping query ranges'
complete -c diamond -n "__fish_seen_subcommand_from blastx" -l compress -d 'compression for output files (0=none, 1=gzip, zstd)'
complete -c diamond -n "__fish_seen_subcommand_from blastx" -l evalue -s e -d 'maximum e-value to report alignments (default=0.001)'
complete -c diamond -n "__fish_seen_subcommand_from blastx" -l min-score -d 'minimum bit score to report alignments (overrides e-value setting)'
complete -c diamond -n "__fish_seen_subcommand_from blastx" -l id -d 'minimum identity% to report an alignment'
complete -c diamond -n "__fish_seen_subcommand_from blastx" -l query-cover -d 'minimum query cover% to report an alignment'
complete -c diamond -n "__fish_seen_subcommand_from blastx" -l subject-cover -d 'minimum subject cover% to report an alignment'
complete -c diamond -n "__fish_seen_subcommand_from blastx" -l fast -d 'enable fast mode'
complete -c diamond -n "__fish_seen_subcommand_from blastx" -l mid-sensitive -d 'enable mid-sensitive mode'
complete -c diamond -n "__fish_seen_subcommand_from blastx" -l sensitive -d 'enable sensitive mode)'
complete -c diamond -n "__fish_seen_subcommand_from blastx" -l more-sensitive -d 'enable more sensitive mode'
complete -c diamond -n "__fish_seen_subcommand_from blastx" -l very-sensitive -d 'enable very sensitive mode'
complete -c diamond -n "__fish_seen_subcommand_from blastx" -l ultra-sensitive -d 'enable ultra sensitive mode'
complete -c diamond -n "__fish_seen_subcommand_from blastx" -l iterate -d 'iterated search with increasing sensitivity'
complete -c diamond -n "__fish_seen_subcommand_from blastx" -l global-ranking -s g -d 'number of targets for global ranking'
complete -c diamond -n "__fish_seen_subcommand_from blastx" -l block-size -s b -d 'sequence block size in billions of letters (default=2.0)'
complete -c diamond -n "__fish_seen_subcommand_from blastx" -l index-chunks -s c -d 'number of chunks for index processing (default=4)'
complete -c diamond -n "__fish_seen_subcommand_from blastx" -l tmpdir -s t -d 'directory for temporary files'
complete -c diamond -n "__fish_seen_subcommand_from blastx" -l parallel-tmpdir -d 'directory for temporary files used by multiprocessing'
complete -c diamond -n "__fish_seen_subcommand_from blastx" -l gapopen -d 'gap open penalty'
complete -c diamond -n "__fish_seen_subcommand_from blastx" -l gapextend -d 'gap extension penalty'
complete -c diamond -n "__fish_seen_subcommand_from blastx" -l frameshift -s F -d 'frame shift penalty (default=disabled)'
complete -c diamond -n "__fish_seen_subcommand_from blastx" -l long-reads -d 'short for --range-culling --top 10 -F 15'
complete -c diamond -n "__fish_seen_subcommand_from blastx" -l matrix -d 'score matrix for protein alignment (default=BLOSUM62)'
complete -c diamond -n "__fish_seen_subcommand_from blastx" -l custom-matrix -d 'file containing custom scoring matrix'
complete -c diamond -n "__fish_seen_subcommand_from blastx" -l comp-based-stats -d 'composition based statistics mode (0-4)'
complete -c diamond -n "__fish_seen_subcommand_from blastx" -l masking -d 'masking algorithm (none, seg, tantan=default)'
complete -c diamond -n "__fish_seen_subcommand_from blastx" -l query-gencode -d 'genetic code to use to translate query (see user manual)'
complete -c diamond -n "__fish_seen_subcommand_from blastx" -l salltitles -d 'include full subject titles in DAA file'
complete -c diamond -n "__fish_seen_subcommand_from blastx" -l sallseqid -d 'include all subject ids in DAA file'
complete -c diamond -n "__fish_seen_subcommand_from blastx" -l no-self-hits -d 'suppress reporting of identical self hits'
complete -c diamond -n "__fish_seen_subcommand_from blastx" -l taxonlist -d 'restrict search to list of taxon ids (comma-separated)'
complete -c diamond -n "__fish_seen_subcommand_from blastx" -l taxon-exclude -d 'exclude list of taxon ids (comma-separated)'
complete -c diamond -n "__fish_seen_subcommand_from blastx" -l seqidlist -d 'filter the database by list of accessions'
complete -c diamond -n "__fish_seen_subcommand_from blastx" -l skip-missing-seqids -d 'ignore accessions missing in the database'



complete -c diamond -n "__fish_seen_subcommand_from view" -l daa -s a -d 'DIAMOND alignment archive (DAA) file'
complete -c diamond -n "__fish_seen_subcommand_from view" -l forwardonly -d 'only show alignments of forward strand'



complete -c diamond -n "__fish_seen_subcommand_from getseq" -l seq -d 'Space-separated list of sequence numbers to display.ond version 2.0.13'
