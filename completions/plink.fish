# Auto-generated with h2o

complete -c plink -l "bfile" -d "Specify .bed + .bim + .fam prefix (default 'plink')." -x
complete -c plink -l "bed" -d "Specify full name of .bed file." -r
complete -c plink -l "bim" -d "Specify full name of .bim file." -r
complete -c plink -l "fam" -d "Specify full name of .fam file." -r
complete -c plink -l "keep-autoconv" -d "With --file/--tfile/--lfile/--vcf/--bcf/--data/--23file, don't delete autogenerated binary fileset at end of run."
complete -c plink -l "file" -d "Specify .ped + .map filename prefix (default 'plink')." -r
complete -c plink -l "ped" -d "Specify full name of .ped file." -r
complete -c plink -l "map" -d "Specify full name of .map file." -r
complete -c plink -l "no-fid" -d ".fam/.ped file does not contain column 1 (family ID)."
complete -c plink -l "no-parents" -d ".fam/.ped file does not contain columns 3-4 (parents)."
complete -c plink -l "no-sex" -d ".fam/.ped file does not contain column 5 (sex)."
complete -c plink -l "no-pheno" -d ".fam/.ped file does not contain column 6 (phenotype)."
complete -c plink -l "tfile" -d "Specify .tped + .tfam filename prefix (default 'plink')." -r
complete -c plink -l "tped" -d "Specify full name of .tped file." -r
complete -c plink -l "tfam" -d "Specify full name of .tfam file." -r
complete -c plink -l "lfile" -d "Specify .lgen + .map + .fam (long-format fileset) prefix." -r
complete -c plink -l "lgen" -d "Specify full name of .lgen file." -r
complete -c plink -l "reference" -d "Specify default allele file accompanying .lgen input." -r
complete -c plink -l "allele-count" -d "When used with --lfile/--lgen + --reference, specifies that the .lgen file contains reference allele counts."
complete -c plink -l "vcf" -d "Specify full name of .vcf or .vcf.gz file." -r
complete -c plink -l "bcf" -d "Specify full name of BCF2 file." -r
complete -c plink -l "data" -d "Specify Oxford .gen + .sample prefix (default 'plink')." -x
complete -c plink -l "gen" -d "Specify full name of .gen or .gen.gz file." -r
complete -c plink -l "bgen" -d "Specify full name of .bgen file." -r
complete -c plink -l "sample" -d "Specify full name of .sample file." -r
complete -c plink -l "23file" -d "Specify 23andMe input file." -r
complete -c plink -l "grm-gz" -d "Specify .grm.gz + .grm.id (GCTA rel." -x
complete -c plink -l "grm-bin" -d "Specify .grm.bin + .grm.N.bin + .grm.id (GCTA triangular binary relationship matrix) filename prefix." -r
complete -c plink -l "dummy" -d "This generates a fake input dataset with the specified number of samples and SNPs." -x
complete -c plink -l "simulate" -d "generates a fake input dataset with disease-associated SNPs." -r
complete -c plink -l "simulate-qt" -d "generates a dataset with quantitative trait loci." -r
complete -c plink -l "out" -d "Specify prefix for output files." -r
complete -c plink -l "make-bed" -d "Create a new binary fileset."
complete -c plink -l "make-just-bim" -l "make-just-fam" -d "Variants of --make-bed which only write a new .bim or .fam file."
complete -c plink -l "recode" -d "Create a new text fileset with all filters applied." -r
complete -c plink -l "flip-scan" -l "flipscan" -d "LD-based scan for case/control strand inconsistency." -x
complete -c plink -l "write-covar" -d "If a --covar file is loaded, --make-bed/--make-just-fam and --recode automatically generate an updated version (with all filters applied)."
complete -c plink -l "write-cluster" -d "If clusters are specified with --within/--family, this generates a new cluster file (with all filters applied)." -r
complete -c plink -l "write-set" -l "set-table" -d "If sets have been defined, --write-set dumps 'END'-terminated set membership lists to <output prefix>.set, while --set-table writes a variant-by-set membership table to <output prefix>.set.table."
complete -c plink -l "merge" -l "bmerge" -d "Merge the given fileset with the initially loaded fileset, writing the result to <output prefix>.bed + .bim + .fam." -r
complete -c plink -l "merge-list" -d "Merge all filesets named in the text file with the reference fileset, if one was specified." -r
complete -c plink -l "write-snplist" -d "writes a .snplist file listing the names of all variants which pass the filters and inclusion thresholds you've specified"
complete -c plink -l "list-23-indels" -d "writes the subset with 23andMe-style indel calls (D/I allele codes)."
complete -c plink -l "list-duplicate-vars" -d "writes a .dupvar file describing all groups of variants with matching positions and allele codes." -r
complete -c plink -l "freq" -d "generates a basic allele frequency (or count, if the 'counts' modifier is present) report." -x
complete -c plink -l "freqx" -d "generates a more detailed genotype count report, designed for use with --read-freq." -x
complete -c plink -l "missing" -d "Generate sample- and variant-based missing data reports." -r
complete -c plink -l "test-mishap" -d "Check for association between missing calls and flanking haplotypes."
complete -c plink -l "hardy" -d "Generate a Hardy-Weinberg exact test p-value report." -x
complete -c plink -l "mendel" -d "Generate a Mendel error report." -r
complete -c plink -l "het" -d "Estimate inbreeding coefficients." -x
complete -c plink -l "ibc" -d "Estimate inbreeding coefficients."
complete -c plink -l "check-sex" -d "normally compares sex assignments in the input dataset with those imputed from X chromosome inbreeding coefficients." -x
complete -c plink -l "impute-sex" -d "normally compares sex assignments in the input dataset with those imputed from X chromosome inbreeding coefficients." -x
complete -c plink -l "fst" -l "Fst" -d "Estimate Wright's Fst for each autosomal diploid variant using the method introduced in Weir BS, Cockerham CC (1984) Estimating F-statistics for the analysis of population structure, given a set of subpopulations defined via --within." -x
complete -c plink -l "indep" -d "<window size>['kb'] <step size (variant ct)> <VIF threshold>"
complete -c plink -l "indep-pairwise" -l "indep-pairphase" -d "Generate a list of markers in approximate linkage equilibrium." -x
complete -c plink -l "r" -d "LD statistic reports." -x
complete -c plink -l "r2" -d "LD statistic reports." -x
complete -c plink -l "ld" -d "This displays haplotype frequencies, r^2, and D' for a single pair of variants." -x
complete -c plink -l "show-tags" -d "If a file is specified, list all variants which tag at least one variant named in the file." -r
complete -c plink -l "blocks" -d "Estimate haplotype blocks, via Haploview's interpretation of the block definition suggested by Gabriel S et al." -x
complete -c plink -l "distance" -d "Write a lower-triangular tab-delimited table of (weighted) genomic distances in allele count units to <output prefix>.dist, and a list of the corresponding sample IDs to <output prefix>.dist.id." -x
complete -c plink -l "distance-matrix" -d "[deprecated] equivalent to \"--distance 1-ibs flat-missing square\""
complete -c plink -l "ibs-matrix" -d "[deprecated] equivalent to \"--distance ibs flat-missing square\""
complete -c plink -l "make-rel" -d "Write a lower-triangular variance-standardized realized relationship matrix to <output prefix>.rel, and corresponding IDs to <output prefix>.rel.id." -x
complete -c plink -l "make-grm-gz" -d "writes the relationships in GCTA's original gzipped list format, which describes one pair per line" -x
complete -c plink -l "make-grm-bin" -d "writes them in GCTA 1.1+'s single-precision triangular binary format." -x
complete -c plink -l "rel-cutoff" -l "grm-cutoff" -d "Exclude one member of each pair of samples with relatedness greater than the given cutoff value (default 0.025)." -x
complete -c plink -l "ibs-test" -d "Given case/control phenotype data, these commands consider three subsets of the distance matrix: pairs of affected samples, affected-unaffected pairs, and pairs of unaffected samples." -x
complete -c plink -l "groupdist" -d "Given case/control phenotype data, these commands consider three subsets of the distance matrix: pairs of affected samples, affected-unaffected pairs, and pairs of unaffected samples." -x
complete -c plink -l "regress-distance" -d "Linear regression of pairwise genomic distances on pairwise average phenotypes and vice versa, using delete-d jackknife for standard errors." -x
complete -c plink -l "regress-rel" -d "Linear regression of pairwise genomic relationships on pairwise average phenotypes, and vice versa." -x
complete -c plink -l "genome" -d "Generate an identity-by-descent report." -x
complete -c plink -l "homozyg" -d "request a set of run-of-homozygosity reports, and allow you to customize how they are generated." -x
complete -c plink -l "homozyg-snp" -d "request a set of run-of-homozygosity reports, and allow you to customize how they are generated." -x
complete -c plink -l "homozyg-kb" -d "request a set of run-of-homozygosity reports, and allow you to customize how they are generated." -x
complete -c plink -l "homozyg-density" -d "request a set of run-of-homozygosity reports, and allow you to customize how they are generated." -x
complete -c plink -l "homozyg-gap" -d "request a set of run-of-homozygosity reports, and allow you to customize how they are generated." -x
complete -c plink -l "homozyg-het" -d "request a set of run-of-homozygosity reports, and allow you to customize how they are generated." -x
complete -c plink -l "homozyg-window-snp" -d "request a set of run-of-homozygosity reports, and allow you to customize how they are generated." -x
complete -c plink -l "homozyg-window-het" -d "request a set of run-of-homozygosity reports, and allow you to customize how they are generated." -x
complete -c plink -l "homozyg-window-missing" -d "request a set of run-of-homozygosity reports, and allow you to customize how they are generated." -x
complete -c plink -l "homozyg-window-threshold" -d "request a set of run-of-homozygosity reports, and allow you to customize how they are generated." -x
complete -c plink -l "cluster" -d "Cluster samples using a pairwise similarity statistic (normally IBS)." -x
complete -c plink -l "pca" -d "Calculates a variance-standardized relationship matrix (use --make-rel/--make-grm-gz/--make-grm-bin to dump it), and extracts the top" -x
complete -c plink -l "neighbour" -l "neighbor" -d "Report IBS distances from each sample to their n1th- to n2th-nearest neighbors, associated Z-scores, and the identities of those neighbors." -x
complete -c plink -l "assoc" -d "performs a 1df chi-square allelic test" -x
complete -c plink -l "model" -d "Basic association analysis report." -x
complete -c plink -l "gxe" -d "Given both a quantitative phenotype and a case/control covariate loaded with --covar defining two groups, --gxe compares the regression coefficient derived from considering only members of one group to the regression coefficient derived from considering only members of the other." -x
complete -c plink -l "linear" -d "Multi-covariate association analysis on a quantitative phenotype." -x
complete -c plink -l "logistic" -d "Multi-covariate association analysis on a case/control phenotype." -x
complete -c plink -l "dosage" -d "Process (possibly gzipped) text files with variant-major allelic dosage data." -r
complete -c plink -l "write-dosage" -d "Process (possibly gzipped) text files with variant-major allelic dosage data."
complete -c plink -l "lasso" -d "Estimate variant effect sizes via LASSO regression." -x
complete -c plink -l "test-missing" -d "Check for association between missingness and case/control status, using Fisher's exact test." -x
complete -c plink -l "make-perm-pheno" -d "Generate phenotype permutations and write them to disk, without invoking an association test." -x
complete -c plink -l "tdt" -d "Report transmission disequilibrium test statistics, given case/control phenotypes and pedigree information" -x
complete -c plink -l "qfam" -d "QFAM family-based association test for quantitative traits." -x
complete -c plink -l "qfam-parents" -d "QFAM family-based association test for quantitative traits." -x
complete -c plink -l "qfam-between" -d "QFAM family-based association test for quantitative traits." -x
complete -c plink -l "qfam-total" -d "QFAM family-based association test for quantitative traits." -x
complete -c plink -l "annotate" -d "Add annotations to a variant-based PLINK report." -r
complete -c plink -l "clump" -d "Process association analysis report(s) with 'SNP' and p-value columns, organizing results by LD-based clumps." -r
complete -c plink -l "gene-report" -d "Generate a gene-based report from a variant-based report." -r
complete -c plink -l "meta-analysis" -d "Perform a meta-analysis on several variant-based reports with 'SNP' and 'SE' fields." -r
complete -c plink -l "fast-epistasis" -d "Scan for epistatic interactions." -x
complete -c plink -l "epistasis" -d "Scan for epistatic interactions." -x
complete -c plink -l "epistasis-summary-merge" -d "When a --[fast-]epistasis job is subdivided with --parallel, the main report can be assembled at the end by applying Unix 'cat' in the usual manner, but the .summary.1, .summary.2, ..." -r
complete -c plink -l "twolocus" -d "Two-locus joint genotype count report." -x
complete -c plink -l "score" -d "Apply a linear scoring system to each sample." -r
complete -c plink -l "R" -d "Connect to a Rserve (preferably version 1.7 or later) background process, and execute the Rplink function defined in the input file." -r
complete -c plink -l "write-var-ranges" -d "Divide the set of variants into equal-size blocks." -x
complete -c plink -l "mh" -l "cmh" -d "computes 2x2xK Cochran-Mantel-Haenszel statistics for each variant" -x
complete -c plink -l "bd" -d "performs the Breslow-Day test for odds ratio homogeneity." -x
complete -c plink -l "mh2" -l "homog" -d "variant set testing based on the CMH (default) or Breslow-Day (when 'perm-bd' is present) statistic are supported."
complete -c plink -l "script" -d "Include command-line options from file." -r
complete -c plink -l "rerun" -d "Rerun commands in log (default 'plink.log')." -x
complete -c plink -l "version" -d "Display only version number before exiting."
complete -c plink -l "silent" -d "Suppress output to console."
complete -c plink -l "gplink" -d "Reserved for interoperation with gPLINK."
complete -c plink -l "missing-genotype" -d "Set missing genotype code (normally '0')." -x
complete -c plink -l "double-id" -d "Set both FIDs and IIDs to the VCF/BCF sample ID."
complete -c plink -l "const-fid" -d "Set all FIDs to the given constant (default '0')." -x
complete -c plink -l "id-delim" -d "Parse sample IDs as <FID><d><IID> (default delim '_')." -x
complete -c plink -l "vcf-idspace-to" -d "Convert spaces in sample IDs to the given character." -x
complete -c plink -l "biallelic-only" -d "Skip VCF variants with 2+ ALT alleles." -x
complete -c plink -l "vcf-min-qual" -d "Skip VCF variants with low/missing QUAL." -x
complete -c plink -l "vcf-filter" -d "Skip variants which have FILTER failures." -x
complete -c plink -l "vcf-require-gt" -d "Skip variants with no GT field."
complete -c plink -l "vcf-min-gq" -d "No-call a genotype when GQ is below the given threshold." -x
complete -c plink -l "vcf-min-gp" -d "No-call a genotype when 0-1 scaled GP is below the given threshold." -x
complete -c plink -l "vcf-half-call" -d "Specify how '0/.' and similar VCF GT values should be handled." -x
complete -c plink -l "oxford-single-chr" -d "Specify single-chromosome .gen file with ignorable first column." -r
complete -c plink -l "oxford-pheno-name" -d "Import named phenotype from the .sample file." -r
complete -c plink -l "hard-call-threshold" -d "When an Oxford-format fileset is loaded, calls" -r
complete -c plink -l "hard-call-threshold" -d "with uncertainty level greater than 0.1 are normally treated as missing." -x
complete -c plink -l "missing-code" -d "Comma-delimited list of missing phenotype" -x
complete -c plink -l "simulate-ncases" -d "Set --simulate case count (default 1000)." -x
complete -c plink -l "simulate-ncontrols" -d "Set --simulate control count (default 1000)." -x
complete -c plink -l "simulate-prevalence" -d "Set --simulate disease prevalence (default 0.01)." -x
complete -c plink -l "simulate-n" -d "Set --simulate-qt sample count (default 1000)." -x
complete -c plink -l "simulate-label" -d "Set --simulate[-qt] FID/IID name prefix." -x
complete -c plink -l "simulate-missing" -d "Set --simulate[-qt] missing genotype frequency." -x
complete -c plink -l "allow-extra-chr" -l "aec" -d "Permit unrecognized chromosome codes." -x
complete -c plink -l "chr-set" -d "Specify a nonhuman chromosome set." -x
complete -c plink -l "cow" -d "Shortcuts for cow"
complete -c plink -l "dog" -d "Shortcuts for dog"
complete -c plink -l "horse" -d "Shortcuts for horse"
complete -c plink -l "mouse" -d "Shortcuts for mouse"
complete -c plink -l "rice" -d "Shortcuts for rice"
complete -c plink -l "sheep" -d "Shortcuts for sheep"
complete -c plink -l "autosome-num" -d "Alias for \"--chr-set <value> no-y no-xy no-mt\"." -x
complete -c plink -l "cm-map" -d "Use SHAPEIT-format recombination maps to set centimorgan positions." -x
complete -c plink -l "zero-cms" -d "Zero out centimorgan positions."
complete -c plink -l "allow-no-samples" -d "Allow the input fileset to contain no samples."
complete -c plink -l "allow-no-vars" -d "Allow the input fileset to contain no variants."
complete -c plink -l "pheno" -d "Load phenotype data from the specified file, instead of using the values in the main input fileset." -r
complete -c plink -l "all-pheno" -d "For basic association tests, loop through all phenotypes in --pheno file."
complete -c plink -l "mpheno" -d "Load phenotype from column (n+2) in --pheno file." -r
complete -c plink -l "pheno-name" -d "If --pheno file has a header row, use column with the given name." -r
complete -c plink -l "pheno-merge" -d "When the main input fileset contains an phenotype value for a sample, but the --pheno file does not, use the original value instead of treating the phenotype as missing."
complete -c plink -l "missing-phenotype" -d "Set missing phenotype value (normally -9)." -x
complete -c plink -l "1" -d "Expect case/control phenotypes to be coded as 0 = control, 1 = case, instead of the usual 0 = missing, 1 = control, 2 = case."
complete -c plink -l "make-pheno" -d "Define a new case/control phenotype." -r
complete -c plink -l "tail-pheno" -d "Downcode a scalar phenotype to a case/control phenotype." -x
complete -c plink -l "covar" -d "Specify covariate file." -r
complete -c plink -l "covar-name" -d "Specify covariate(s) in --covar file by name." -r
complete -c plink -l "covar-number" -d "Specify covariate(s) in --covar file by index." -r
complete -c plink -l "no-const-covar" -d "Exclude constant covariates."
complete -c plink -l "allow-no-covars" -d "Allow no covariates to be loaded from --covar file."
complete -c plink -l "within" -d "Specify initial cluster assignments." -x
complete -c plink -l "mwithin" -d "Load cluster assignments from column n+2." -x
complete -c plink -l "family" -d "Create a cluster for each family ID."
complete -c plink -l "loop-assoc" -d "Run specified case/control association commands once for each cluster in the file, using cluster membership as the phenotype." -r
complete -c plink -l "set" -d "Load sets from a .set file." -r
complete -c plink -l "set-names" -d "Load only sets named on the command line." -x
complete -c plink -l "subset" -d "Load only sets named in the given text file." -r
complete -c plink -l "set-collapse-all" -d "Merge all sets." -x
complete -c plink -l "complement-sets" -d "Invert all sets."
complete -c plink -l "make-set-complement-all" -d "Equivalent to --set-collapse-all + inversion." -x
complete -c plink -l "make-set" -d "Define sets from a list of named bp ranges." -r
complete -c plink -l "make-set-border" -d "Stretch regions in --make-set file." -r
complete -c plink -l "make-set-collapse-group" -d "Define sets from groups instead of sets in --make-set file."
complete -c plink -l "keep" -d "Exclude all samples not named in the file." -r
complete -c plink -l "remove" -d "Exclude all samples named in the file." -r
complete -c plink -l "keep-fam" -d "Exclude all families not named in the file." -r
complete -c plink -l "remove-fam" -d "Exclude all families named in the file." -r
complete -c plink -l "extract" -d "Exclude all variants not named in the file." -r
complete -c plink -l "exclude" -d "Exclude all variants named in the file." -r
complete -c plink -l "keep-clusters" -d "These can be used individually or in" -r
complete -c plink -l "keep-cluster-names" -d "combination to define a list of clusters to keep; all samples not in a cluster in that list are then excluded." -x
complete -c plink -l "remove-clusters" -d "Exclude all clusters named in the file." -r
complete -c plink -l "remove-cluster-names" -d "Exclude the named clusters." -x
complete -c plink -l "gene" -d "Exclude variants not in a set named on the command line." -x
complete -c plink -l "gene-all" -d "Exclude variants which aren't a member of any set."
complete -c plink -l "attrib" -d "Given a file assigning attributes to variants, and a" -r
complete -c plink -l "attrib-indiv" -d "comma-delimited list (with no whitespace) of attribute names, remove variants/samples which are either missing from the file or don't have any of the listed attributes." -r
complete -c plink -l "chr" -d "Exclude all variants not on the given chromosome(s)." -x
complete -c plink -l "not-chr" -d "Reverse of --chr (exclude variants on listed chromosomes)." -x
complete -c plink -l "autosome" -d "Exclude all non-autosomal variants."
complete -c plink -l "autosome-xy" -d "Exclude all non-autosomal variants, except those with chromosome code XY (pseudo-autosomal region of X)."
complete -c plink -l "snps-only" -d "Exclude non-SNP variants." -x
complete -c plink -l "from" -d "Use ID(s) to specify a variant range to load." -x
complete -c plink -l "to" -d "together, both variants must be on the same chromosome." -x
complete -c plink -l "snp" -d "Specify a single variant to load." -x
complete -c plink -l "exclude-snp" -d "Specify a single variant to exclude." -x
complete -c plink -l "window" -d "With --snp or --exclude-snp, loads/excludes all variants within half the specified kb distance of the named one." -x
complete -c plink -l "from-bp" -d "Use physical position(s) to define a variant range to" -x
complete -c plink -l "to-bp" -d "load." -x
complete -c plink -l "from-kb" -d "values." -x
complete -c plink -l "to-kb" -d "e.g. --chr) when using these flags." -x
complete -c plink -l "from-mb" -l "to-mb" -l "snps" -d "Use IDs to specify variant range(s) to load or" -x
complete -c plink -l "exclude-snps" -d "exclude." -x
complete -c plink -l "thin" -d "Randomly remove variants, retaining each with prob." -x
complete -c plink -l "thin-count" -d "Randomly remove variants until n of them remain." -x
complete -c plink -l "bp-space" -d "Remove variants so that each pair is no closer than the given bp distance." -x
complete -c plink -l "thin-indiv" -d "Randomly remove samples, retaining with prob." -x
complete -c plink -l "thin-indiv-count" -d "Randomly remove samples until n of them remain." -x
complete -c plink -l "filter" -d "Exclude all samples without a 3rd column entry in the given file matching one of the given space-separated value(s)." -r
complete -c plink -l "mfilter" -d "Match against (n+2)th column instead." -x
complete -c plink -l "geno" -d "Exclude variants with missing call frequencies greater than a threshold (default 0.1)." -x
complete -c plink -l "mind" -d "Exclude samples with missing call frequencies greater than a threshold (default 0.1)." -x
complete -c plink -l "oblig-missing" -d "Specify blocks of missing genotype calls for --geno/--mind to ignore." -r
complete -c plink -l "prune" -d "Remove samples with missing phenotypes."
complete -c plink -l "maf" -d "Exclude variants with minor allele frequency lower than a threshold (default 0.01)." -x
complete -c plink -l "max-maf" -d "Exclude variants with MAF greater than the threshold." -x
complete -c plink -l "mac" -l "min-ac" -d "Exclude variants with minor allele count lower than the given threshold." -x
complete -c plink -l "max-mac" -l "max-ac" -d "Exclude variants with minor allele count greater than the given threshold." -x
complete -c plink -l "maf-succ" -d "Rule of succession MAF estimation (used in EIGENSOFT)."
complete -c plink -l "read-freq" -d "Estimate MAFs and heterozygote frequencies from the given --freq[x] report, instead of the input fileset." -r
complete -c plink -l "hwe" -d "Exclude variants with Hardy-Weinberg equilibrium exact test p-values below a threshold." -x
complete -c plink -l "me" -d "Filter out trios and variants with Mendel error rates exceeding the given thresholds." -x
complete -c plink -l "me-exclude-one" -d "Make --me exclude only one sample per trio." -x
complete -c plink -l "qual-scores" -d "Filter out variants with out-of-range quality scores." -x
complete -c plink -l "qual-threshold" -d "Set --qual-scores range floor." -x
complete -c plink -l "qual-max-threshold" -d "Set --qual-scores range ceiling." -x
complete -c plink -l "allow-no-sex" -d "Do not treat ambiguous-sex samples as having missing phenotypes in analysis commands."
complete -c plink -l "must-have-sex" -d "Force ambiguous-sex phenotypes to missing on --make-bed/--make-just-fam/--recode/--write-covar."
complete -c plink -l "filter-cases" -d "Include only cases in the current analysis."
complete -c plink -l "filter-controls" -d "Include only controls."
complete -c plink -l "filter-males" -d "Include only males."
complete -c plink -l "filter-females" -d "Include only females."
complete -c plink -l "filter-founders" -d "Include only founders."
complete -c plink -l "filter-nonfounders" -d "Include only nonfounders."
complete -c plink -l "nonfounders" -d "Include nonfounders in allele freq/HWE calculations."
complete -c plink -l "make-founders" -d "Clear parental IDs for those with 1+ missing parent(s)." -x
complete -c plink -l "recode-allele" -d "With --recode A/A-transpose/AD, count alleles named in the file (otherwise A1 alleles are always counted)." -r
complete -c plink -l "output-chr" -d "Set chromosome coding scheme in output files by providing the desired human mitochondrial code." -r
complete -c plink -l "output-missing-genotype" -d "Set the code used to represent missing genotypes in output files (normally the --missing-genotype value)." -r
complete -c plink -l "output-missing-phenotype" -d "Set the string used to represent missing phenotypes in output files (normally the --missing-phenotype value)." -r
complete -c plink -l "zero-cluster" -d "In combination with --within/--family, set blocks of genotype calls to missing." -r
complete -c plink -l "set-hh-missing" -d "Cause --make-bed and --recode to set heterozygous haploid genotypes to missing."
complete -c plink -l "set-mixed-mt-missing" -d "Cause --make-bed and --recode to set mixed MT genotypes to missing."
complete -c plink -l "split-x" -d "Changes chromosome code of all chrX variants with bp position <= bp1 or >= bp2 to XY." -x
complete -c plink -l "merge-x" -d "Merge XY chromosome back with X." -x
complete -c plink -l "set-me-missing" -d "Cause --make-bed to set Mendel errors to missing."
complete -c plink -l "fill-missing-a2" -d "Cause --make-bed to replace all missing calls with homozygous A2 calls."
complete -c plink -l "set-missing-var-ids" -d "Given a template string with a '@' where the chromosome code should go and '#' where the bp coordinate belongs, --set-missing-var-ids assigns chromosome-and-bp-based IDs to unnamed variants." -x
complete -c plink -l "new-id-max-allele-len" -d "Specify maximum number of leading characters from allele names to include in new variant IDs (default 23)." -x
complete -c plink -l "missing-var-code" -d "Change unnamed variant code (default '.')." -x
complete -c plink -l "update-chr" -d "Update variant chromosome codes." -x
complete -c plink -l "update-cm" -d "Update centimorgan positions." -x
complete -c plink -l "update-map" -d "Update variant bp positions." -x
complete -c plink -l "update-name" -d "Update variant IDs." -x
complete -c plink -l "update-alleles" -d "Update variant allele codes." -x
complete -c plink -l "allele1234" -d "Interpret/recode A/C/G/T alleles as 1/2/3/4." -x
complete -c plink -l "alleleACGT" -d "Reverse of --allele1234." -x
complete -c plink -l "update-ids" -d "Update sample IDs." -x
complete -c plink -l "update-parents" -d "Update parental IDs." -x
complete -c plink -l "update-sex" -d "Update sexes." -x
complete -c plink -l "flip" -d "Flip alleles (A<->T, C<->G) for SNP IDs in the file." -r
complete -c plink -l "flip-subset" -d "Only apply --flip to samples in --flip-subset file." -r
complete -c plink -l "flip-scan-window" -d "Set --flip-scan max variant ct dist." -x
complete -c plink -l "flip-scan-window-kb" -d "Set --flip-scan max kb distance (default 1000)." -x
complete -c plink -l "flip-scan-threshold" -d "Set --flip-scan min correlation (default 0.5)." -x
complete -c plink -l "keep-allele-order" -d "Keep the allele order defined in the .bim file,"
complete -c plink -l "real-ref-alleles" -d "instead of forcing A2 to be the major allele."
complete -c plink -l "a1-allele" -d "Force alleles in the file to A1." -r
complete -c plink -l "a2-allele" -d "Force alleles in the file to A2." -r
complete -c plink -l "indiv-sort" -d "Specify FID/IID sort order." -x
complete -c plink -l "with-phenotype" -d "Include more sample info in new .cov file." -r
complete -c plink -l "dummy-coding" -d "Split categorical variables (n categories, 2 < n <= N, default N is 49) into n-1 binary dummy variables when writing covariate file." -r
complete -c plink -l "merge-mode" -d "Adjust --[b]merge/--merge-list behavior based on a numeric code." -x
complete -c plink -l "merge-equal-pos" -d "With --merge/--bmerge/--merge-list, merge variants with different names but identical positions."
complete -c plink -l "mendel-duos" -d "Make Mendel error checks consider samples with only one parent in the dataset."
complete -c plink -l "mendel-multigen" -d "Make Mendel error checks consider (great-)grandparental genotypes when parental genotype data is missing."
complete -c plink -l "ld-window" -d "Set --r/--r2 max variant ct pairwise distance (usu." -x
complete -c plink -l "ld-window-kb" -d "Set --r/--r2 max kb pairwise distance (usually 1000)." -x
complete -c plink -l "ld-window-cm" -d "Set --r/--r2 max centimorgan pairwise distance." -x
complete -c plink -l "ld-window-r2" -d "Set threshold for --r2 report inclusion (usually 0.2)." -x
complete -c plink -l "ld-snp" -d "Set first variant in all --r/--r2 pairs." -x
complete -c plink -l "ld-snps" -d "Restrict first --r/--r2 variant to the given ranges." -x
complete -c plink -l "ld-snp-list" -d "Restrict first --r/--r2 var." -r
complete -c plink -l "list-all" -d "Generate the 'all' mode report when using --show-tags in file mode."
complete -c plink -l "tag-kb" -d "Set --show-tags max tag kb distance (default 250)." -x
complete -c plink -l "tag-r2" -d "Set --show-tags min tag r-squared (default 0.8)" -x
complete -c plink -l "tag-mode2" -d "Use two-column --show-tags (file mode) I/O format."
complete -c plink -l "ld-xchr" -d "Set chrX model for --indep[-pairwise], --r/--r2, --flip-scan, and --show-tags." -x
complete -c plink -l "blocks-max-kb" -d "Set --blocks maximum haploblock span (def." -x
complete -c plink -l "blocks-min-maf" -d "Adjust --blocks MAF minimum (default 0.05)." -x
complete -c plink -l "blocks-strong-lowci" -d "Set --blocks \"strong LD\" CI thresholds (defaults" -x
complete -c plink -l "blocks-strong-highci" -d "0.70 and 0.98)." -x
complete -c plink -l "blocks-recomb-highci" -d "Set 'recombination' CI threshold (default 0.90)." -x
complete -c plink -l "blocks-inform-frac" -d "Force haploblock <strong LD pairs>:<total informative pairs> ratios to be larger than this value (default 0.95)." -x
complete -c plink -l "distance-wts" -d "When computing genomic distances, assign each variant a weight of (2q(1-q))^{-x}, where q is the loaded or inferred MAF." -x
complete -c plink -l "read-dists" -d "Load a triangular binary distance matrix instead of recalculating from scratch." -r
complete -c plink -l "ppc-gap" -d "Minimum number of base pairs, in thousands, between informative pairs of markers used in --genome PPC test." -x
complete -c plink -l "min" -d "Specify minimum PI_HAT for inclusion in --genome report." -x
complete -c plink -l "max" -d "Specify maximum PI_HAT for inclusion in --genome report." -x
complete -c plink -l "homozyg-match" -d "Set minimum concordance across jointly homozygous variants for a pairwise allelic match to be declared." -x
complete -c plink -l "pool-size" -d "Set minimum size of pools in \"--homozyg group\" report." -x
complete -c plink -l "read-genome" -d "Load --genome report for --cluster/--neighbour, instead of recalculating IBS and PPC test p-values from scratch." -x
complete -c plink -l "ppc" -d "Specify minimum PPC test p-value within a cluster." -x
complete -c plink -l "mc" -d "Specify maximum cluster size." -x
complete -c plink -l "mcc" -d "Specify maximum case and control counts per cluster." -x
complete -c plink -l "K" -d "Specify minimum cluster count." -x
complete -c plink -l "ibm" -d "Specify minimum identity-by-missingness." -x
complete -c plink -l "match" -d "Use covariate values to restrict clustering." -x
complete -c plink -l "match-type" -d "Refine interpretation of --match file." -r
complete -c plink -l "qmatch" -d "Force all members of a cluster to have similar" -x
complete -c plink -l "qt" -d "quantitative covariate values." -r
complete -c plink -l "pca-cluster-names" -d "These can be used individually or in combination" -x
complete -c plink -l "pca-clusters" -d "to define a list of clusters to use in the basic --pca computation." -r
complete -c plink -l "mds-plot" -d "Multidimensional scaling analysis." -x
complete -c plink -l "cell" -d "Skip some --model tests when a contingency table entry is smaller than the given threshold." -x
complete -c plink -l "condition" -d "Add one variant as a --linear or --logistic covariate." -x
complete -c plink -l "condition-list" -d "Add variants named in the file as --linear/--logistic covariates." -r
complete -c plink -l "parameters" -d "Include only the given covariates/interactions in the --linear/--logistic models, identified by a list of 1-based indices and/or ranges of them." -x
complete -c plink -l "tests" -d "Perform a (joint) test on the specified term(s) in the --linear/--logistic model, identified by 1-based indices and/or ranges of them." -x
complete -c plink -l "vif" -d "Set VIF threshold for --linear multicollinearity check (default 50)." -x
complete -c plink -l "xchr-model" -d "Set the X chromosome --linear/--logistic model." -x
complete -c plink -l "lasso-select-covars" -d "Subject some or all covariates to LASSO model selection." -x
complete -c plink -l "adjust" -d "Report some multiple-testing corrections." -x
complete -c plink -l "lambda" -d "Set genomic control lambda for --adjust." -x
complete -c plink -l "ci" -d "Report confidence intervals for odds ratios." -x
complete -c plink -l "pfilter" -d "Filter out association test results with higher p-values." -x
complete -c plink -l "aperm" -d "Set up to six parameters controlling adaptive permutation tests." -x
complete -c plink -l "mperm-save" -d "Save best max(T) permutation test statistics."
complete -c plink -l "mperm-save-all" -d "Save all max(T) permutation test statistics."
complete -c plink -l "set-p" -d "Adjust set test significant variant p-value ceiling (default 0.05)." -x
complete -c plink -l "set-r2" -d "Adjust set test significant variant pairwise r^2 ceiling (default 0.5)." -x
complete -c plink -l "set-max" -d "Adjust set test maximum # of significant variants considered per set (default 5)." -x
complete -c plink -l "set-test-lambda" -d "Specify genomic control correction for set test." -x
complete -c plink -l "border" -d "Extend --annotate range intervals by given # kbs." -x
complete -c plink -l "annotate-snp-field" -d "Set --annotate variant ID field name." -x
complete -c plink -l "clump-p1" -d "Set --clump index var." -x
complete -c plink -l "clump-p2" -d "Set --clump secondary p-value threshold (default 0.01)." -x
complete -c plink -l "clump-r2" -d "Set --clump r^2 threshold (default 0.5)." -x
complete -c plink -l "clump-kb" -d "Set --clump kb radius (default 250)." -x
complete -c plink -l "clump-snp-field" -d "Set --clump variant ID field name (default 'SNP')." -x
complete -c plink -l "clump-field" -d "Set --clump p-value field name (default 'P')." -x
complete -c plink -l "clump-allow-overlap" -d "Let --clump non-index vars."
complete -c plink -l "clump-verbose" -d "Request extended --clump report."
complete -c plink -l "clump-annotate" -d "Include named extra fields in --clump-verbose and --clump-best reports." -x
complete -c plink -l "clump-range" -d "Report overlaps between clumps and regions." -r
complete -c plink -l "clump-range-border" -d "Stretch regions in --clump-range file." -r
complete -c plink -l "clump-index-first" -d "Extract --clump index vars."
complete -c plink -l "clump-replicate" -d "Exclude clumps which contain secondary results from only one file."
complete -c plink -l "clump-best" -d "Report best proxy for each --clump index var."
complete -c plink -l "meta-analysis-chr-field" -d "Set --meta-analysis chromosome, variant" -x
complete -c plink -l "meta-analysis-snp-field" -d "ID, position, A1/A2 allele, p-value," -x
complete -c plink -l "meta-analysis-bp-field" -d "standard error, and/or effective sample" -x
complete -c plink -l "meta-analysis-a1-field" -d "size field names." -x
complete -c plink -l "meta-analysis-a2-field" -d "Defaults are 'CHR', 'SNP', 'BP', 'A1'," -x
complete -c plink -l "meta-analysis-p-field" -d "'A2', 'P', 'SE', and 'NMISS'," -x
complete -c plink -l "meta-analysis-se-field" -d "respectively." -x
complete -c plink -l "meta-analysis-ess-field" -d "are given to these flags, earlier names take precedence over later ones." -x
complete -c plink -l "meta-analysis-report-dups" -d "When a variant appears multiple times in in the same file, report that."
complete -c plink -l "gene-list-border" -d "Extend --gene-report regions by given # of kbs." -x
complete -c plink -l "gene-subset" -d "Specify gene name subset for --gene-report." -r
complete -c plink -l "gene-report-snp-field" -d "Set --gene-report variant ID field name (default 'SNP')." -x
complete -c plink -l "gap" -d "Set \"--fast-epistasis case-only\" min." -x
complete -c plink -l "epi1" -d "Set --[fast-]epistasis reporting threshold (default 5e-6 for 'boost', 1e-4 otherwise)." -x
complete -c plink -l "epi2" -d "Set threshold for contributing to SIG_E count (def." -x
complete -c plink -l "je-cellmin" -d "Set required number of observations per 3x3x2 contingency table cell for joint-effects test (default 5)." -x
complete -c plink -l "q-score-range" -d "Apply --score to subset(s) of variants in the primary score list based on e.g. p-value ranges." -r
complete -c plink -l "R-port" -d "Connect to Rserve on a port other than 6311." -x
complete -c plink -l "R-host" -d "Connect to Rserve host." -x
complete -c plink -l "R-socket" -d "Connect to Rserve socket." -x
complete -c plink -l "parallel" -d "Divide the output matrix into n pieces, and only compute the kth piece." -r
complete -c plink -l "memory" -d "Set size, in MB, of initial workspace malloc attempt." -x
complete -c plink -l "threads" -d "Set maximum number of concurrent threads." -x
complete -c plink -l "d" -d "Change variant/covariate range delimiter (normally '-')." -x
complete -c plink -l "seed" -d "Set random number seed(s)." -x
complete -c plink -l "perm-batch-size" -d "Set number of permutations per batch for some permutation tests." -x
complete -c plink -l "native" -d "Allow Intel MKL to use processor-dependent code paths."
complete -c plink -l "output-min-p" -d "Specify minimum p-value to write to reports." -x
complete -c plink -l "debug" -d "Use slower, more crash-resistant logging method."
