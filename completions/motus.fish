# Auto-generated with h2o

complete -k -c motus -n __fish_use_subcommand -x -a snv_call -d "Generate SNV profiles (using metaSNV)"
complete -k -c motus -n __fish_use_subcommand -x -a map_snv -d "Map reads to the marker gene database for SNV calling"
complete -k -c motus -n __fish_use_subcommand -x -a prep_long -d "Prepare long reads to be profiled by mOTUs"
complete -k -c motus -n __fish_use_subcommand -x -a calc_motu -d "Summarize MGC abundances into a mOTU profile"
complete -k -c motus -n __fish_use_subcommand -x -a calc_mgc -d "Calculate marker gene cluster (MGC) abundance"
complete -k -c motus -n __fish_use_subcommand -x -a map_tax -d "Map reads to the marker gene database"
complete -k -c motus -n __fish_use_subcommand -x -a merge -d "Merge several taxonomic profiling results into one table"
complete -k -c motus -n __fish_use_subcommand -x -a profile -d "Perform taxonomic profiling (map_tax + calc_mgc + calc_motu) in a single step"
complete -k -c motus -n __fish_use_subcommand -x -a downloadDB -d "Download the mOTUs database"



complete -c motus -n "__fish_seen_subcommand_from profile" -s "f" -d "input file(s) for reads in forward orientation, fastq(.gz)-formatted" -r
complete -c motus -n "__fish_seen_subcommand_from profile" -s "r" -d "input file(s) for reads in reverse orientation, fastq(.gz)-formatted" -r
complete -c motus -n "__fish_seen_subcommand_from profile" -s "s" -d "input file(s) for unpaired reads, fastq(.gz)-formatted" -r
complete -c motus -n "__fish_seen_subcommand_from profile" -s "n" -d "sample name ['unnamed sample']" -x
complete -c motus -n "__fish_seen_subcommand_from profile" -s "i" -d "provide SAM or BAM input file(s) (generated by motus map_tax)" -r
complete -c motus -n "__fish_seen_subcommand_from profile" -s "m" -d "provide a mgc reads count file (generated by motus calc_mgc)" -r
complete -c motus -n "__fish_seen_subcommand_from profile" -o "db" -d "provide a different database directory" -r
complete -c motus -n "__fish_seen_subcommand_from profile" -s "o" -d "output file name [stdout]" -r
complete -c motus -n "__fish_seen_subcommand_from profile" -s "I" -d "save the result of BWA in BAM format (output of motus map_tax)" -r
complete -c motus -n "__fish_seen_subcommand_from profile" -s "M" -d "save the mgc reads count (output of motus calc_mgc)" -r
complete -c motus -n "__fish_seen_subcommand_from profile" -s "e" -d "only species with reference genomes (ref-mOTUs)"
complete -c motus -n "__fish_seen_subcommand_from profile" -s "u" -d "print the full name of the species"
complete -c motus -n "__fish_seen_subcommand_from profile" -s "c" -d "print result as counts instead of relative abundances"
complete -c motus -n "__fish_seen_subcommand_from profile" -s "p" -d "print NCBI taxonomy identifiers"
complete -c motus -n "__fish_seen_subcommand_from profile" -s "B" -d "print result in BIOM format"
complete -c motus -n "__fish_seen_subcommand_from profile" -s "C" -d "print result in CAMI format (BioBoxes format 0.9.1) Values: [precision, recall, parenthesis]" -x
complete -c motus -n "__fish_seen_subcommand_from profile" -s "q" -d "print the full rank taxonomy"
complete -c motus -n "__fish_seen_subcommand_from profile" -s "A" -d "print all taxonomic levels together (kingdom to mOTUs, override -k)"
complete -c motus -n "__fish_seen_subcommand_from profile" -s "k" -d "taxonomic level [mOTU] Values: [kingdom, phylum, class, order, family, genus, mOTU]" -x
complete -c motus -n "__fish_seen_subcommand_from profile" -s "g" -d "number of marker genes cutoff: 1=higher recall, 6=higher precision [3]" -x
complete -c motus -n "__fish_seen_subcommand_from profile" -s "l" -d "min length of the alignment (bp) [75]" -x
complete -c motus -n "__fish_seen_subcommand_from profile" -s "t" -d "number of threads [1]" -x
complete -c motus -n "__fish_seen_subcommand_from profile" -s "v" -d "verbosity level: 1=error, 2=warning, 3=message, 4+=debugging [3]" -x
complete -c motus -n "__fish_seen_subcommand_from profile" -s "y" -d "type of read counts [insert.scaled_counts] Values: [base.coverage, insert.raw_counts, insert.scaled_counts]" -x



complete -c motus -n "__fish_seen_subcommand_from merge" -s "i" -d "list of mOTU profiles to merge (comma separated)" -r
complete -c motus -n "__fish_seen_subcommand_from merge" -s "d" -d "merge all files in the directory DIR" -r
complete -c motus -n "__fish_seen_subcommand_from merge" -s "a" -d "add pre-computed profiles from different environmental samples Values: [all, air, bioreactor, bee, cat, cattle, chicken, dog, fish, freshwater, human, marine, mouse, pig, sheep, soil, termite, wastewater]" -r
complete -c motus -n "__fish_seen_subcommand_from merge" -s "o" -d "output file name [stdout]" -r
complete -c motus -n "__fish_seen_subcommand_from merge" -s "B" -d "print result in BIOM format"
complete -c motus -n "__fish_seen_subcommand_from merge" -s "v" -d "verbosity level: 1=error, 2=warning, 3=message, 4+=debugging [3]" -x



complete -c motus -n "__fish_seen_subcommand_from map_tax" -s "f" -d "input file(s) for reads in forward orientation, fastq(.gz)-formatted" -r
complete -c motus -n "__fish_seen_subcommand_from map_tax" -s "r" -d "input file(s) for reads in reverse orientation, fastq(.gz)-formatted" -r
complete -c motus -n "__fish_seen_subcommand_from map_tax" -s "s" -d "input file(s) for unpaired reads, fastq(.gz)-formatted" -r
complete -c motus -n "__fish_seen_subcommand_from map_tax" -o "db" -d "provide a different database directory" -r
complete -c motus -n "__fish_seen_subcommand_from map_tax" -s "o" -d "output file name [stdout]" -r
complete -c motus -n "__fish_seen_subcommand_from map_tax" -s "b" -d "save the result of BWA in BAM format"
complete -c motus -n "__fish_seen_subcommand_from map_tax" -s "l" -d "min length of the alignment (bp) [75]" -x
complete -c motus -n "__fish_seen_subcommand_from map_tax" -s "t" -d "number of threads [1]" -x
complete -c motus -n "__fish_seen_subcommand_from map_tax" -s "v" -d "verbosity level: 1=error, 2=warning, 3=message, 4+=debugging [3]" -x



complete -c motus -n "__fish_seen_subcommand_from calc_mgc" -s "n" -d "sample name" -x
complete -c motus -n "__fish_seen_subcommand_from calc_mgc" -s "i" -d "provide a SAM or BAM input file (or list of files) output of motus map_tax" -r
complete -c motus -n "__fish_seen_subcommand_from calc_mgc" -o "db" -d "provide a different database directory" -r
complete -c motus -n "__fish_seen_subcommand_from calc_mgc" -s "o" -d "output file name [stdout]" -r
complete -c motus -n "__fish_seen_subcommand_from calc_mgc" -s "l" -d "min length of the alignment (bp) [75]" -x
complete -c motus -n "__fish_seen_subcommand_from calc_mgc" -s "v" -d "verbosity level: 1=error, 2=warning, 3=message, 4+=debugging [3]" -x
complete -c motus -n "__fish_seen_subcommand_from calc_mgc" -s "y" -d "type of read counts [insert.scaled_counts] Values: [base.coverage, insert.raw_counts, insert.scaled_counts]" -x



complete -c motus -n "__fish_seen_subcommand_from calc_motu" -s "n" -d "sample name" -x
complete -c motus -n "__fish_seen_subcommand_from calc_motu" -s "i" -d "provide the mgc abundance table (output of motus calc_mgc)" -r
complete -c motus -n "__fish_seen_subcommand_from calc_motu" -o "db" -d "provide a different database directory" -r
complete -c motus -n "__fish_seen_subcommand_from calc_motu" -s "o" -d "output file name [stdout]" -r
complete -c motus -n "__fish_seen_subcommand_from calc_motu" -s "e" -d "only species with reference genomes (ref-mOTUs)"
complete -c motus -n "__fish_seen_subcommand_from calc_motu" -s "B" -d "print result in BIOM format"
complete -c motus -n "__fish_seen_subcommand_from calc_motu" -s "C" -d "print result in CAMI format (BioBoxes format 0.9.1) Values: [precision, recall, parenthesis]" -x
complete -c motus -n "__fish_seen_subcommand_from calc_motu" -s "A" -d "print all taxonomic levels together (kingdom to mOTUs, override -k)"
complete -c motus -n "__fish_seen_subcommand_from calc_motu" -s "c" -d "print result as counts instead of relative abundances"
complete -c motus -n "__fish_seen_subcommand_from calc_motu" -s "p" -d "print NCBI taxonomy identifiers"
complete -c motus -n "__fish_seen_subcommand_from calc_motu" -s "u" -d "print the full name of the species"
complete -c motus -n "__fish_seen_subcommand_from calc_motu" -s "q" -d "print the full rank taxonomy"
complete -c motus -n "__fish_seen_subcommand_from calc_motu" -s "k" -d "taxonomic level [mOTU] Values: [kingdom, phylum, class, order, family, genus, mOTU]" -x
complete -c motus -n "__fish_seen_subcommand_from calc_motu" -s "g" -d "number of marker genes cutoff: 1=higher recall, 6=higher precision [3]" -x
complete -c motus -n "__fish_seen_subcommand_from calc_motu" -s "v" -d "verbosity level: 1=error, 2=warning, 3=message, 4+=debugging [3]" -x



complete -c motus -n "__fish_seen_subcommand_from prep_long" -s "i" -d "long read file to convert, can be fasta(.gz) or fastq(.gz)" -r
complete -c motus -n "__fish_seen_subcommand_from prep_long" -s "o" -d "converted file (gzipped), ready to be used by motus profile" -r
complete -c motus -n "__fish_seen_subcommand_from prep_long" -o "no_gz" -d "save the output file without gzipping it"
complete -c motus -n "__fish_seen_subcommand_from prep_long" -o "sl" -d "splitting length for the long reads [300]" -x
complete -c motus -n "__fish_seen_subcommand_from prep_long" -o "ml" -d "minimum read length, shorter are discarded [50]" -x
complete -c motus -n "__fish_seen_subcommand_from prep_long" -s "v" -d "verbosity level: 1=error, 2=warning, 3=message, 4+=debugging [3]" -x



complete -c motus -n "__fish_seen_subcommand_from map_snv" -s "f" -d "input file(s) for reads in forward orientation, fastq(.gz)-formatted" -r
complete -c motus -n "__fish_seen_subcommand_from map_snv" -s "r" -d "input file(s) for reads in reverse orientation, fastq(.gz)-formatted" -r
complete -c motus -n "__fish_seen_subcommand_from map_snv" -s "s" -d "input file(s) for unpaired reads, fastq(.gz)-formatted" -r
complete -c motus -n "__fish_seen_subcommand_from map_snv" -o "db" -d "provide a different database directory" -r
complete -c motus -n "__fish_seen_subcommand_from map_snv" -s "o" -d "output BAM file name [stdout]" -r
complete -c motus -n "__fish_seen_subcommand_from map_snv" -s "l" -d "min length of the alignment (bp) [75]" -x
complete -c motus -n "__fish_seen_subcommand_from map_snv" -s "t" -d "number of threads [1]" -x
complete -c motus -n "__fish_seen_subcommand_from map_snv" -s "v" -d "verbosity level: 1=error, 2=warning, 3=message, 4+=debugging [3]" -x



complete -c motus -n "__fish_seen_subcommand_from snv_call" -s "d" -d "Call metaSNV on all BAM files in the directory" -r
complete -c motus -n "__fish_seen_subcommand_from snv_call" -o "db" -d "provide a different database directory" -r
complete -c motus -n "__fish_seen_subcommand_from snv_call" -s "o" -d "Output directory." -r
complete -c motus -n "__fish_seen_subcommand_from snv_call" -s "K" -d "Keep all the directories produced by metaSNV."
complete -c motus -n "__fish_seen_subcommand_from snv_call" -o "fb" -d "Sample filter: Coverage breadth, minimal horizontal mOTU coverage percentage per sample [80.0]" -x
complete -c motus -n "__fish_seen_subcommand_from snv_call" -o "fd" -d "Sample filter: Coverage depth, minimal average vertical mOTU coverage per sample [5.0]" -x
complete -c motus -n "__fish_seen_subcommand_from snv_call" -o "fm" -d "mOTU filter: Minimum number of samples meeting coverage criteria per mOTU [2]" -x
complete -c motus -n "__fish_seen_subcommand_from snv_call" -o "fp" -d "Position filter: Required proportion of informative samples (coverage non-zero) per position [0.90]" -x
complete -c motus -n "__fish_seen_subcommand_from snv_call" -o "fc" -d "Position filter: Minimum coverage per position per sample per mOTU [5.0]" -x
complete -c motus -n "__fish_seen_subcommand_from snv_call" -s "v" -d "verbosity level: 1=error, 2=warning, 3=message, 4+=debugging [3]" -x
