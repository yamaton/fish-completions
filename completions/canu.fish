# Auto-generated with h2o

complete -c canu -s "p" -d "Prefix of the output files name" -r
complete -c canu -s "d" -d "Directory the assembly is computed in" -r
complete -c canu -o "haplotype" -d "generate haplotype-specific reads"
complete -c canu -o "correct" -d "generate corrected reads"
complete -c canu -o "trim" -d "generate trimmed reads"
complete -c canu -o "assemble" -d "generate an assembly"
complete -c canu -o "trim-assemble" -d "generate trimmed reads and then assemble them"
complete -c canu -s "s" -d "Assembly specificatin file" -r
complete -c canu -o "haplotype" -d "Specify haplotypes for TrioCanu" -x
complete -c canu -o "corrected" -o "trimmed" -o "untrimmed" -o "raw" -d "Specify input data type: Choose from -trimmed, -untrimmed, -raw, -corrected." -x
complete -c canu -o "pacbio" -d "Specify PacBio fasta/fastq" -r
complete -c canu -o "nanopore" -d "Specify Oxford Nanopore fasta/fastq" -r
complete -c canu -o "pacbio-hifi" -d "Specify PacBio HiFi fasta/fastq" -r
complete -c canu -o "batMemory" -d "Approximate maximum memory usage, in gigabytes, default is the maxMemory limit"
complete -c canu -o "batOptions" -d "Advanced options to bogart"
complete -c canu -o "batStageSpace" -d "Amount of local disk space needed to stage data for unitig construction jobs"
complete -c canu -o "batThreads" -d "Number of threads to use; default is the maxThreads limit"
complete -c canu -o "cnsConcurrency" -d "If grid not enabled, number of unitig consensus jobs to run at the same time; default is n_proc / n_threads"
complete -c canu -o "cnsConsensus" -d "Which consensus algorithm to use; 'pbdagcon' (fast, reliable); 'utgcns' (multialignment output); 'quick' (single read mosaic); default 'pbdagcon'"
complete -c canu -o "cnsErrorRate" -d "Consensus expects alignments at about this error rate"
complete -c canu -o "cnsMaxCoverage" -d "Limit unitig consensus to at most this coverage; default '40' = unlimited"
complete -c canu -o "cnsMemory" -d "Amount of memory, in gigabytes, to use for unitig consensus jobs"
complete -c canu -o "cnsPartitions" -d "Attempt to create this many consensus jobs; default '0' = based on the largest tig"
complete -c canu -o "cnsStageSpace" -d "Amount of local disk space needed to stage data for unitig consensus jobs"
complete -c canu -o "cnsThreads" -d "Number of threads to use for unitig consensus jobs"
complete -c canu -o "contigFilter" -d "Parameters to filter out 'unassembled' unitigs."
complete -c canu -o "corConcurrency" -d "If grid not enabled, number of read correction jobs to run at the same time; default is n_proc / n_threads"
complete -c canu -o "corConsensus" -d "Which consensus algorithm to use; only 'falcon' is supported; default 'falcon'"
complete -c canu -o "corErrorRate" -d "Only use raw alignments below this error rate to construct corrected reads"
complete -c canu -o "corFilter" -d "Method to filter short reads from correction; 'quick' or 'expensive'; default 'expensive'"
complete -c canu -o "corMaxEvidenceCoverageGlobal" -d "Limit reads used for correction to supporting at most this coverage; default: '1.0x' = 1.0 * estimated coverage"
complete -c canu -o "corMaxEvidenceCoverageLocal" -d "Limit reads being corrected to at most this much evidence coverage; default: '2.0x' = 2.0 * estimated coverage"
complete -c canu -o "corMaxEvidenceErate" -d "Limit read correction to only overlaps at or below this fraction error; default: unlimited"
complete -c canu -o "corMemory" -d "Amount of memory, in gigabytes, to use for read correction jobs"
complete -c canu -o "corMhapBlockSize" -d "Number of reads per GB of memory allowed (mhapMemory)"
complete -c canu -o "cormhapConcurrency" -d "If grid not enabled, number of mhap overlaps for correction jobs to run at the same time; default is n_proc / n_threads"
complete -c canu -o "corMhapFilterThreshold" -d "Value between 0 and 1."
complete -c canu -o "corMhapFilterUnique" -d "Expert option: True or false, supress the low-frequency k-mer distribution based on them being likely noise and not true overlaps."
complete -c canu -o "cormhapMemory" -d "Amount of memory, in gigabytes, to use for mhap overlaps for correction jobs"
complete -c canu -o "corMhapMerSize" -d "K-mer size for seeds in mhap"
complete -c canu -o "corMhapNoTf" -d "Expert option: True or false, do not use tf weighting, only idf of tf-idf."
complete -c canu -o "corMhapOptions" -d "Expert option: free-form parameters to pass to MHAP."
complete -c canu -o "corMhapOrderedMerSize" -d "K-mer size for second-stage filter in mhap"
complete -c canu -o "corMhapPipe" -d "Report results to a pipe instead of *large* files."
complete -c canu -o "corMhapSensitivity" -d "Coarse sensitivity level: 'low', 'normal' or 'high'."
complete -c canu -o "cormhapStageSpace" -d "Amount of local disk space needed to stage data for mhap overlaps for correction jobs"
complete -c canu -o "cormhapThreads" -d "Number of threads to use for mhap overlaps for correction jobs"
complete -c canu -o "corMhapVersion" -d "Version of the MHAP jar file to use"
complete -c canu -o "corMinCoverage" -d "Minimum number of bases supporting each corrected base, if less than this sequences are split; default based on input read coverage: 0 <= 30x < 4 < 60x <= 4"
complete -c canu -o "corMinEvidenceLength" -d "Limit read correction to only overlaps longer than this; default: unlimited"
complete -c canu -o "corMMapBlockSize" -d "Number of reads per 1GB; memory * blockSize = the size of block loaded into memory per job"
complete -c canu -o "cormmapConcurrency" -d "If grid not enabled, number of mmap overlaps for correction jobs to run at the same time; default is n_proc / n_threads"
complete -c canu -o "cormmapMemory" -d "Amount of memory, in gigabytes, to use for mmap overlaps for correction jobs"
complete -c canu -o "corMMapMerSize" -d "K-mer size for seeds in minmap"
complete -c canu -o "cormmapStageSpace" -d "Amount of local disk space needed to stage data for mmap overlaps for correction jobs"
complete -c canu -o "cormmapThreads" -d "Number of threads to use for mmap overlaps for correction jobs"
complete -c canu -o "corOutCoverage" -d "Only correct the longest reads up to this coverage; default 40"
complete -c canu -o "corOverlapper" -d "Which overlap algorithm to use for correction"
complete -c canu -o "corovlConcurrency" -d "If grid not enabled, number of overlaps for correction jobs to run at the same time; default is n_proc / n_threads"
complete -c canu -o "corOvlErrorRate" -d "Overlaps above this error rate are not computed"
complete -c canu -o "corOvlFilter" -d "Filter overlaps based on expected kmers vs observed kmers"
complete -c canu -o "corOvlFrequentMers" -d "Do not seed overlaps with these kmers"
complete -c canu -o "corOvlHashBits" -d "Width of the kmer hash."
complete -c canu -o "corOvlHashBlockLength" -d "Amount of sequence (bp) to load into the overlap hash table"
complete -c canu -o "corOvlHashLoad" -d "Maximum hash table load."
complete -c canu -o "corovlMemory" -d "Amount of memory, in gigabytes, to use for overlaps for correction jobs"
complete -c canu -o "corOvlMerDistinct" -d "K-mer frequency threshold; the least frequent fraction of distinct mers can seed overlaps"
complete -c canu -o "corOvlMerSize" -d "K-mer size for seeds in overlaps"
complete -c canu -o "corOvlMerThreshold" -d "K-mer frequency threshold; mers more frequent than this count are ignored"
complete -c canu -o "corOvlRefBlockLength" -d "Amount of sequence (bp) to search against the hash table per batch"
complete -c canu -o "corovlStageSpace" -d "Amount of local disk space needed to stage data for overlaps for correction jobs"
complete -c canu -o "corovlThreads" -d "Number of threads to use for overlaps for correction jobs"
complete -c canu -o "corPartitionMin" -d "Don't make a read correction partition with fewer than N reads"
complete -c canu -o "corPartitions" -d "Partition read correction into N jobs"
complete -c canu -o "corReAlign" -d "Refine overlaps by computing the actual alignment: 'true' or 'false'."
complete -c canu -o "correctedErrorRate" -d "Expected fraction error in an alignment of two corrected reads"
complete -c canu -o "corStageSpace" -d "Amount of local disk space needed to stage data for read correction jobs"
complete -c canu -o "corThreads" -d "Number of threads to use for read correction jobs"
complete -c canu -o "enableOEA" -d "Do overlap error adjustment - comprises two steps: read error detection (RED) and overlap error adjustment (OEA); default 'true'"
complete -c canu -o "executiveMemory" -d "Amount of memory, in GB, to reserve for the Canu exective process"
complete -c canu -o "executiveThreads" -d "Number of threads to reserve for the Canu exective process"
complete -c canu -o "genomeSize" -d "An estimate of the size of the genome"
complete -c canu -o "gnuplot" -d "Path to the gnuplot executable"
complete -c canu -o "gnuplotImageFormat" -d "Image format that gnuplot will generate."
complete -c canu -o "gridEngine" -d "Grid engine configuration, not documented"
complete -c canu -o "gridEngineArrayMaxJobs" -d "Grid engine configuration, not documented"
complete -c canu -o "gridEngineArrayName" -d "Grid engine configuration, not documented"
complete -c canu -o "gridEngineArrayOption" -d "Grid engine configuration, not documented"
complete -c canu -o "gridEngineArraySubmitID" -d "Grid engine configuration, not documented"
complete -c canu -o "gridEngineJobID" -d "Grid engine configuration, not documented"
complete -c canu -o "gridEngineMemoryOption" -d "Grid engine configuration, not documented"
complete -c canu -o "gridEngineMemoryPerJob" -d "Grid engine configuration, not documented"
complete -c canu -o "gridEngineMemoryUnits" -d "Grid engine configuration, not documented"
complete -c canu -o "gridEngineNameOption" -d "Grid engine configuration, not documented"
complete -c canu -o "gridEngineNameToJobIDCommand" -d "Grid engine configuration, not documented"
complete -c canu -o "gridEngineNameToJobIDCommandNoArrayGrid" -d "engine configuration, not documented"
complete -c canu -o "gridEngineOutputOption" -d "Grid engine configuration, not documented"
complete -c canu -o "gridEngineResourceOption" -d "Grid engine configuration, not documented"
complete -c canu -o "gridEngineStageOption" -d "Grid engine configuration, not documented"
complete -c canu -o "gridEngineSubmitCommand" -d "Grid engine configuration, not documented"
complete -c canu -o "gridEngineTaskID" -d "Grid engine configuration, not documented"
complete -c canu -o "gridEngineThreadsOption" -d "Grid engine configuration, not documented"
complete -c canu -o "gridOptions" -d "Grid engine options applied to all jobs"
complete -c canu -o "gridOptionsbat" -d "Grid engine options applied to unitig construction jobs"
complete -c canu -o "gridOptionscns" -d "Grid engine options applied to unitig consensus jobs"
complete -c canu -o "gridOptionscor" -d "Grid engine options applied to read correction jobs"
complete -c canu -o "gridOptionscormhap" -d "Grid engine options applied to mhap overlaps for correction jobs"
complete -c canu -o "gridOptionscormmap" -d "Grid engine options applied to mmap overlaps for correction jobs"
complete -c canu -o "gridOptionscorovl" -d "Grid engine options applied to overlaps for correction jobs"
complete -c canu -o "gridOptionsExecutive" -d "Grid engine options applied to the canu executive script"
complete -c canu -o "gridOptionshap" -d "Grid engine options applied to haplotype assignment jobs"
complete -c canu -o "gridOptionsJobName" -d "Grid jobs job-name suffix"
complete -c canu -o "gridOptionsmeryl" -d "Grid engine options applied to mer counting jobs"
complete -c canu -o "gridOptionsobtmhap" -d "Grid engine options applied to mhap overlaps for trimming jobs"
complete -c canu -o "gridOptionsobtmmap" -d "Grid engine options applied to mmap overlaps for trimming jobs"
complete -c canu -o "gridOptionsobtovl" -d "Grid engine options applied to overlaps for trimming jobs"
complete -c canu -o "gridOptionsoea" -d "Grid engine options applied to overlap error adjustment jobs"
complete -c canu -o "gridOptionsovb" -d "Grid engine options applied to overlap store bucketizing jobs"
complete -c canu -o "gridOptionsovs" -d "Grid engine options applied to overlap store sorting jobs"
complete -c canu -o "gridOptionsred" -d "Grid engine options applied to read error detection jobs"
complete -c canu -o "gridOptionsutgmhap" -d "Grid engine options applied to mhap overlaps for unitig construction jobs"
complete -c canu -o "gridOptionsutgmmap" -d "Grid engine options applied to mmap overlaps for unitig construction jobs"
complete -c canu -o "gridOptionsutgovl" -d "Grid engine options applied to overlaps for unitig construction jobs"
complete -c canu -o "hapConcurrency" -d "Unused, there is only one process"
complete -c canu -o "hapMemory" -d "Amount of memory, in gigabytes, to use for haplotype assignment"
complete -c canu -o "hapStageSpace" -d "Amount of local disk space needed to stage data for haplotype assignment jobs"
complete -c canu -o "hapThreads" -d "Number of threads to use for haplotype assignment"
complete -c canu -o "hapUnknownFraction" -d "Fraction of allowed unknown bases before they are included in the assembly, between 0-1; default 0.05"
complete -c canu -o "homoPolyCompress" -d "Compute everything but consensus sequences using homopolymer compressed reads"
complete -c canu -o "java" -d "Java interpreter to use; at least version 1.8; default 'java'"
complete -c canu -o "javaUse64Bit" -d "Java interpreter supports the -d64 or -d32 flags; default auto"
complete -c canu -o "maxInputCoverage" -d "If input coverage is high, downsample to something reasonable; default 200"
complete -c canu -o "maxMemory" -d "Maximum memory to use by any component of the assembler"
complete -c canu -o "maxThreads" -d "Maximum number of compute threads to use by any component of the assembler"
complete -c canu -o "merylConcurrency" -d "Unused, there is only one process"
complete -c canu -o "merylMemory" -d "Amount of memory, in gigabytes, to use for mer counting"
complete -c canu -o "merylStageSpace" -d "Amount of local disk space needed to stage data for mer counting jobs"
complete -c canu -o "merylThreads" -d "Number of threads to use for mer counting"
complete -c canu -o "minimap" -d "Path to minimap2; default 'minimap2'"
complete -c canu -o "minInputCoverage" -d "Stop if input coverage is too low; default 10"
complete -c canu -o "minMemory" -d "Minimum amount of memory needed to compute the assembly (do not set unless prompted!)"
complete -c canu -o "minOverlapLength" -d "Overlaps shorter than this length are not computed; default 500"
complete -c canu -o "minReadLength" -d "Reads shorter than this length are not loaded into the assembler; default 1000"
complete -c canu -o "minThreads" -d "Minimum number of compute threads suggested to compute the assembly"
complete -c canu -o "objectStore" -d "Type of object storage used; not ready for production yet"
complete -c canu -o "objectStoreClient" -d "Path to the command line client used to access the object storage"
complete -c canu -o "objectStoreClientDA" -d "Path to the command line client used to download files from object storage"
complete -c canu -o "objectStoreClientUA" -d "Path to the command line client used to upload files to object storage"
complete -c canu -o "objectStoreNameSpace" -d "Object store parameters; specific to the type of objectStore used"
complete -c canu -o "objectStoreProject" -d "Object store project; specific to the type of objectStore used"
complete -c canu -o "obtErrorRate" -d "Stringency of overlaps to use for trimming"
complete -c canu -o "obtMhapBlockSize" -d "Number of reads per GB of memory allowed (mhapMemory)"
complete -c canu -o "obtmhapConcurrency" -d "If grid not enabled, number of mhap overlaps for trimming jobs to run at the same time; default is n_proc / n_threads"
complete -c canu -o "obtMhapFilterThreshold" -d "Value between 0 and 1."
complete -c canu -o "obtMhapFilterUnique" -d "Expert option: True or false, supress the low-frequency k-mer distribution based on them being likely noise and not true overlaps."
complete -c canu -o "obtmhapMemory" -d "Amount of memory, in gigabytes, to use for mhap overlaps for trimming jobs"
complete -c canu -o "obtMhapMerSize" -d "K-mer size for seeds in mhap"
complete -c canu -o "obtMhapNoTf" -d "Expert option: True or false, do not use tf weighting, only idf of tf-idf."
complete -c canu -o "obtMhapOptions" -d "Expert option: free-form parameters to pass to MHAP."
complete -c canu -o "obtMhapOrderedMerSize" -d "K-mer size for second-stage filter in mhap"
complete -c canu -o "obtMhapPipe" -d "Report results to a pipe instead of *large* files."
complete -c canu -o "obtMhapSensitivity" -d "Coarse sensitivity level: 'low', 'normal' or 'high'."
complete -c canu -o "obtmhapStageSpace" -d "Amount of local disk space needed to stage data for mhap overlaps for trimming jobs"
complete -c canu -o "obtmhapThreads" -d "Number of threads to use for mhap overlaps for trimming jobs"
complete -c canu -o "obtMhapVersion" -d "Version of the MHAP jar file to use"
complete -c canu -o "obtMMapBlockSize" -d "Number of reads per 1GB; memory * blockSize = the size of block loaded into memory per job"
complete -c canu -o "obtmmapConcurrency" -d "If grid not enabled, number of mmap overlaps for trimming jobs to run at the same time; default is n_proc / n_threads"
complete -c canu -o "obtmmapMemory" -d "Amount of memory, in gigabytes, to use for mmap overlaps for trimming jobs"
complete -c canu -o "obtMMapMerSize" -d "K-mer size for seeds in minmap"
complete -c canu -o "obtmmapStageSpace" -d "Amount of local disk space needed to stage data for mmap overlaps for trimming jobs"
complete -c canu -o "obtmmapThreads" -d "Number of threads to use for mmap overlaps for trimming jobs"
complete -c canu -o "obtOverlapper" -d "Which overlap algorithm to use for overlap based trimming"
complete -c canu -o "obtovlConcurrency" -d "If grid not enabled, number of overlaps for trimming jobs to run at the same time; default is n_proc / n_threads"
complete -c canu -o "obtOvlErrorRate" -d "Overlaps at or below this error rate are used to trim reads"
complete -c canu -o "obtOvlFilter" -d "Filter overlaps based on expected kmers vs observed kmers"
complete -c canu -o "obtOvlFrequentMers" -d "Do not seed overlaps with these kmers"
complete -c canu -o "obtOvlHashBits" -d "Width of the kmer hash."
complete -c canu -o "obtOvlHashBlockLength" -d "Amount of sequence (bp) to load into the overlap hash table"
complete -c canu -o "obtOvlHashLoad" -d "Maximum hash table load."
complete -c canu -o "obtovlMemory" -d "Amount of memory, in gigabytes, to use for overlaps for trimming jobs"
complete -c canu -o "obtOvlMerDistinct" -d "K-mer frequency threshold; the least frequent fraction of distinct mers can seed overlaps"
complete -c canu -o "obtOvlMerSize" -d "K-mer size for seeds in overlaps"
complete -c canu -o "obtOvlMerThreshold" -d "K-mer frequency threshold; mers more frequent than this count are ignored"
complete -c canu -o "obtOvlRefBlockLength" -d "Amount of sequence (bp) to search against the hash table per batch"
complete -c canu -o "obtovlStageSpace" -d "Amount of local disk space needed to stage data for overlaps for trimming jobs"
complete -c canu -o "obtovlThreads" -d "Number of threads to use for overlaps for trimming jobs"
complete -c canu -o "obtReAlign" -d "Refine overlaps by computing the actual alignment: 'true' or 'false'."
complete -c canu -o "oeaBatchLength" -d "Number of bases per overlap error correction batch"
complete -c canu -o "oeaBatchSize" -d "Number of reads per overlap error correction batch"
complete -c canu -o "oeaConcurrency" -d "If grid not enabled, number of overlap error adjustment jobs to run at the same time; default is n_proc / n_threads"
complete -c canu -o "oeaErrorRate" -d "Only use overlaps with at most this much fraction error to find errors in reads; default utgOvlErrorRate, 0.003 for HiFi reads"
complete -c canu -o "oeaHaploConfirm" -d "This many or more reads will confirm a true haplotype difference; default 5"
complete -c canu -o "oeaMaskTrivial" -d "Mask trivial DNA in Overlap Error Adjustment; default off; on for HiFi reads"
complete -c canu -o "oeaMemory" -d "Amount of memory, in gigabytes, to use for overlap error adjustment jobs"
complete -c canu -o "oeaStageSpace" -d "Amount of local disk space needed to stage data for overlap error adjustment jobs"
complete -c canu -o "oeaThreads" -d "Number of threads to use for overlap error adjustment jobs"
complete -c canu -o "onFailure" -d "Full path to command to run on failure"
complete -c canu -o "onSuccess" -d "Full path to command to run on successful completion"
complete -c canu -o "ovbConcurrency" -d "If grid not enabled, number of overlap store bucketizing jobs to run at the same time; default is n_proc / n_threads"
complete -c canu -o "ovbMemory" -d "Amount of memory, in gigabytes, to use for overlap store bucketizing jobs"
complete -c canu -o "ovbStageSpace" -d "Amount of local disk space needed to stage data for overlap store bucketizing jobs"
complete -c canu -o "ovbThreads" -d "Number of threads to use for overlap store bucketizing jobs"
complete -c canu -o "ovsConcurrency" -d "If grid not enabled, number of overlap store sorting jobs to run at the same time; default is n_proc / n_threads"
complete -c canu -o "ovsMemory" -d "Amount of memory, in gigabytes, to use for overlap store sorting jobs"
complete -c canu -o "ovsStageSpace" -d "Amount of local disk space needed to stage data for overlap store sorting jobs"
complete -c canu -o "ovsThreads" -d "Number of threads to use for overlap store sorting jobs"
complete -c canu -o "preExec" -d "A command line to run at the start of Canu execution scripts"
complete -c canu -o "purgeOverlaps" -d "When to delete intermediate overlap files: never, normal (default), aggressive, dangerous"
complete -c canu -o "rawErrorRate" -d "Expected fraction error in an alignment of two uncorrected reads"
complete -c canu -o "readSamplingBias" -d "Score reads as 'random * length^bias', keep the highest scoring reads"
complete -c canu -o "redBatchLength" -d "Number of bases per fragment error detection batch"
complete -c canu -o "redBatchSize" -d "Number of reads per fragment error detection batch"
complete -c canu -o "redConcurrency" -d "If grid not enabled, number of read error detection jobs to run at the same time; default is n_proc / n_threads"
complete -c canu -o "redMemory" -d "Amount of memory, in gigabytes, to use for read error detection jobs"
complete -c canu -o "redStageSpace" -d "Amount of local disk space needed to stage data for read error detection jobs"
complete -c canu -o "redThreads" -d "Number of threads to use for read error detection jobs"
complete -c canu -o "saveMerCounts" -d "Save full mer counting results, sometimes useful"
complete -c canu -o "saveOverlaps" -d "Do not remove the overlap stores."
complete -c canu -o "saveReadCorrections" -d "Save intermediate read correction files, almost never a good idea"
complete -c canu -o "saveReadHaplotypes" -d "Save intermediate read haplotype files, almost never a good idea"
complete -c canu -o "saveReads" -d "Save intermediate corrected and trimmed reads to asm.correctedReads.fasta.gz and asm.trimmedReads.fasta.gz"
complete -c canu -o "shell" -d "Command interpreter to use; sh-compatible (e.g., bash), NOT C-shell (csh or tcsh); default '/bin/sh'"
complete -c canu -o "showNext" -d "Don't run any commands, just report what would run"
complete -c canu -o "stageDirectory" -d "If set, copy heavily used data to this node-local location"
complete -c canu -o "stopAfter" -d "Stop after a specific algorithm step is completed"
complete -c canu -o "stopOnLowCoverage" -d "Stop if raw, corrected or trimmed read coverage is low"
complete -c canu -o "trimReadsCoverage" -d "Minimum depth of evidence to retain bases; default '2"
complete -c canu -o "trimReadsOverlap" -d "Minimum overlap between evidence to make contiguous trim; default '500'"
complete -c canu -o "unitigger" -d "Which unitig algorithm to use; only 'bogart' supported; default 'bogart'"
complete -c canu -o "useGrid" -d "If 'true', enable grid-based execution; if 'false', run all jobs on the local machine; if 'remote', create jobs for grid execution but do not submit; default 'true'"
complete -c canu -o "useGridbat" -d "If 'true', run module unitig construction under grid control; if 'false' run locally."
complete -c canu -o "useGridcns" -d "If 'true', run module unitig consensus under grid control; if 'false' run locally."
complete -c canu -o "useGridcor" -d "If 'true', run module read correction under grid control; if 'false' run locally."
complete -c canu -o "useGridcormhap" -d "If 'true', run module mhap overlaps for correction under grid control; if 'false' run locally."
complete -c canu -o "useGridcormmap" -d "If 'true', run module mmap overlaps for correction under grid control; if 'false' run locally."
complete -c canu -o "useGridcorovl" -d "If 'true', run module overlaps for correction under grid control; if 'false' run locally."
complete -c canu -o "useGridhap" -d "If 'true', run module haplotype assignment under grid control; if 'false' run locally."
complete -c canu -o "useGridmeryl" -d "If 'true', run module mer counting under grid control; if 'false' run locally."
complete -c canu -o "useGridobtmhap" -d "If 'true', run module mhap overlaps for trimming under grid control; if 'false' run locally."
complete -c canu -o "useGridobtmmap" -d "If 'true', run module mmap overlaps for trimming under grid control; if 'false' run locally."
complete -c canu -o "useGridobtovl" -d "If 'true', run module overlaps for trimming under grid control; if 'false' run locally."
complete -c canu -o "useGridoea" -d "If 'true', run module overlap error adjustment under grid control; if 'false' run locally."
complete -c canu -o "useGridovb" -d "If 'true', run module overlap store bucketizing under grid control; if 'false' run locally."
complete -c canu -o "useGridovs" -d "If 'true', run module overlap store sorting under grid control; if 'false' run locally."
complete -c canu -o "useGridred" -d "If 'true', run module read error detection under grid control; if 'false' run locally."
complete -c canu -o "useGridutgmhap" -d "If 'true', run module mhap overlaps for unitig construction under grid control; if 'false' run locally."
complete -c canu -o "useGridutgmmap" -d "If 'true', run module mmap overlaps for unitig construction under grid control; if 'false' run locally."
complete -c canu -o "useGridutgovl" -d "If 'true', run module overlaps for unitig construction under grid control; if 'false' run locally."
complete -c canu -o "utgBubbleDeviation" -d "Overlaps this much above mean of contig will be used to identify bubbles"
complete -c canu -o "utgChimeraType" -d "When to filter reads for contig construction: none, chimera (missing middle), uncovered (missing middle or ends), deadend (missing middle or end or no neighbor) (default)"
complete -c canu -o "utgErrorRate" -d "Overlaps at or below this error rate are used to construct contigs"
complete -c canu -o "utgGraphDeviation" -d "Overlaps this much above median will not be used for initial graph construction"
complete -c canu -o "utgMhapBlockSize" -d "Number of reads per GB of memory allowed (mhapMemory)"
complete -c canu -o "utgmhapConcurrency" -d "If grid not enabled, number of mhap overlaps for unitig construction jobs to run at the same time; default is n_proc / n_threads"
complete -c canu -o "utgMhapFilterThreshold" -d "Value between 0 and 1."
complete -c canu -o "utgMhapFilterUnique" -d "Expert option: True or false, supress the low-frequency k-mer distribution based on them being likely noise and not true overlaps."
complete -c canu -o "utgmhapMemory" -d "Amount of memory, in gigabytes, to use for mhap overlaps for unitig construction jobs"
complete -c canu -o "utgMhapMerSize" -d "K-mer size for seeds in mhap"
complete -c canu -o "utgMhapNoTf" -d "Expert option: True or false, do not use tf weighting, only idf of tf-idf."
complete -c canu -o "utgMhapOptions" -d "Expert option: free-form parameters to pass to MHAP."
complete -c canu -o "utgMhapOrderedMerSize" -d "K-mer size for second-stage filter in mhap"
complete -c canu -o "utgMhapPipe" -d "Report results to a pipe instead of *large* files."
complete -c canu -o "utgMhapSensitivity" -d "Coarse sensitivity level: 'low', 'normal' or 'high'."
complete -c canu -o "utgmhapStageSpace" -d "Amount of local disk space needed to stage data for mhap overlaps for unitig construction jobs"
complete -c canu -o "utgmhapThreads" -d "Number of threads to use for mhap overlaps for unitig construction jobs"
complete -c canu -o "utgMhapVersion" -d "Version of the MHAP jar file to use"
complete -c canu -o "utgMMapBlockSize" -d "Number of reads per 1GB; memory * blockSize = the size of block loaded into memory per job"
complete -c canu -o "utgmmapConcurrency" -d "If grid not enabled, number of mmap overlaps for unitig construction jobs to run at the same time; default is n_proc / n_threads"
complete -c canu -o "utgmmapMemory" -d "Amount of memory, in gigabytes, to use for mmap overlaps for unitig construction jobs"
complete -c canu -o "utgMMapMerSize" -d "K-mer size for seeds in minmap"
complete -c canu -o "utgmmapStageSpace" -d "Amount of local disk space needed to stage data for mmap overlaps for unitig construction jobs"
complete -c canu -o "utgmmapThreads" -d "Number of threads to use for mmap overlaps for unitig construction jobs"
complete -c canu -o "utgOverlapper" -d "Which overlap algorithm to use for unitig construction"
complete -c canu -o "utgovlConcurrency" -d "If grid not enabled, number of overlaps for unitig construction jobs to run at the same time; default is n_proc / n_threads"
complete -c canu -o "utgOvlErrorRate" -d "Overlaps at or below this error rate are used to trim reads"
complete -c canu -o "utgOvlFilter" -d "Filter overlaps based on expected kmers vs observed kmers"
complete -c canu -o "utgOvlFrequentMers" -d "Do not seed overlaps with these kmers"
complete -c canu -o "utgOvlHashBits" -d "Width of the kmer hash."
complete -c canu -o "utgOvlHashBlockLength" -d "Amount of sequence (bp) to load into the overlap hash table"
complete -c canu -o "utgOvlHashLoad" -d "Maximum hash table load."
complete -c canu -o "utgovlMemory" -d "Amount of memory, in gigabytes, to use for overlaps for unitig construction jobs"
complete -c canu -o "utgOvlMerDistinct" -d "K-mer frequency threshold; the least frequent fraction of distinct mers can seed overlaps"
complete -c canu -o "utgOvlMerSize" -d "K-mer size for seeds in overlaps"
complete -c canu -o "utgOvlMerThreshold" -d "K-mer frequency threshold; mers more frequent than this count are ignored"
complete -c canu -o "utgOvlRefBlockLength" -d "Amount of sequence (bp) to search against the hash table per batch"
complete -c canu -o "utgovlStageSpace" -d "Amount of local disk space needed to stage data for overlaps for unitig construction jobs"
complete -c canu -o "utgovlThreads" -d "Number of threads to use for overlaps for unitig construction jobs"
complete -c canu -o "utgReAlign" -d "Refine overlaps by computing the actual alignment: 'true' or 'false'."
complete -c canu -o "utgRepeatConfusedBP" -d "Repeats where the next best edge is at least this many bp shorter will not be split"
complete -c canu -o "utgRepeatConfusedPC" -d "Repeats where the next best edge is at least this many percent shorter will not be split"
complete -c canu -o "utgRepeatDeviation" -d "Overlaps this much above mean unitig error rate will not be used for repeat splitting"
